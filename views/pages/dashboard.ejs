<%-include("../partials/header")-%>
<body class="flex">
    <%-include("../partials/sidebar")-%>
    <div class="py-5 flex-auto">
        <div class="flex justify-between">
            <h1 class="text-2xl font-roboto ml-3 font-bold">Your Dashboard</h1>
            <div class="px-5 cursor-pointer"><%=username %></div>
        </div>
        <div class="mt-5 ml-3">
            <div class="text-slate-950 text-2xl font-semibold w-5/6 h-3/4 m-auto mt-10">
                Keep up the Work!
            </div>
            <div class="w-5/6 h-40 m-auto mt-5 rounded-md border-2 p-3 shadow-md">
                <div class="w-3/4 h-full mx-auto flex flex-col justify-center gap-2">
                    <blockquote class="text-xl h-3/4 italic font-semibold text-gray-900 dark:text-white">
                        <p id="motivation" class="text-lg">Motivational quote</p>
                    </blockquote>
                    <p id="author" class="flex w-full justify-end text-zinc-600 col-span-1" >- author</p>
                </div>
            </div>
            <div class="text-slate-950 text-2xl font-semibold w-5/6 h-3/4 m-auto mt-10">
                Calories Chart
            </div>
            <div class="w-5/6 m-auto h-3/4">
                <canvas id="loginGraph"></canvas>
            </div>
            <div class="text-slate-950 text-2xl font-semibold w-5/6 h-3/4 m-auto mt-10">
                Daily Status
            </div>
            <div class= "text-gray-100 grid grid-cols-2 md:grid-cols-4 sm:grid-cols-3 w-5/6 mx-auto h-3/4 mt-10 pb-10 gap-5 text-sm font-semibold">
                <div class="border rounded-md p-5 bg-blue-600">
                    <div class="flex flex-col shadow-sm gap-3 items-center">
                        <img src="/images/water.png">
                        <p id="water">Water Consumed: 3.5 litres</p>
                        <p>Goal: <%= profile.waterintakegoal%> litres</p>
                    </div>
                </div>
                <div class="border rounded-md shadow-sm p-5 bg-orange-500">
                    <div class="flex flex-col gap-3 items-center">
                        <img src="/images/burger.png">
                        <p id="consume">Calories Consumed: 1700 cal</p>
                        <p>Limit: <%= profile.calorielimit%> cal</p>
                    </div>
                </div>
                <div class="border rounded-md shadow-sm p-5 bg-green-600">
                    <div class="flex flex-col gap-3 items-center">
                        <img src="/images/gym.png">
                        <p id="burn">Calories Burned: 1800 cal</p>
                        <p>Goal: <%= profile.calorieburngoal%> cal</p>
                    </div>
                </div>
                <div class="border rounded-md shadow-sm p-5 bg-gray-600">
                    <div class="flex flex-col gap-3 items-center">
                        <img src="/images/sleep.png">
                        <p id="sleep">Sleep: 7.5 hrs</p>
                        <p>Goal: <%= profile.sleepgoal%> hrs</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    let loginChart = document.getElementById("loginGraph").getContext('2d');
    let motivation = document.getElementById("motivation")
    let author = document.getElementById("author")

    let water = document.getElementById("water")
    let consume = document.getElementById("consume")
    let sleep = document.getElementById("sleep")
    let burn = document.getElementById("burn")
    
    let chart = new Chart(loginChart, {
        type: "line",
        data : {
			labels : [ "Nov 16", "Nov 17", "Nov 18", "Nov 19", "Nov 20",
					"Nov 21", "Nov 22"],
			datasets : [
					{
						data : [ 1400, 2000, 1500, 2013, 1200,
								1700, 1800, 0 ],
						label : "Calories Consumed",
						borderColor : "#ED2939",
						fill : false
					},
                    {
						data : [ 300, 420, 640, 500, 400,
								220, 130, 0 ],
						label : "Calories Burned (from Excercise only)",
						borderColor : "#3cba9f",
						fill : false
					}
                ]
		},
		options : {
			plugins:
            {
                title : {
				    display : true,
				    text : 'Consumed vs Burned calorie graph'
			    }
            },

            beziercurve: true,
            responsive: true,
            aspectRatio: 1,
            maintainAspectRatio: false
		}
    })

    async function getQuote(){
        try {
            const res = await fetch('/quote', {
                method: "GET",
                headers: { 'Content-Type': 'application/json' }
            })

            const data = await res.json();
            console.log(data)

            if(res.ok) {
                motivation.textContent = data.quote;
                author.textContent = "- " + data.author;
            }else{
                console.log("error")
                //emailError.textContent = data.email
            }

        }catch(e) {
            console.log(e)
        }
    }

    function getTodayDate() {
        let currentDate = new Date();
        const offset = currentDate.getTimezoneOffset();
        currentDate = new Date(currentDate.getTime() - offset * 60 * 1000);
        return currentDate.toISOString().split("T")[0];
    }

    async function getHistory() {
        try {
            const date = getTodayDate();
      
            const res = await fetch(`/history/single?date=${date}`, {
              method: "GET",
              headers: { "Content-Type": "application/json" },
            });
      
            const data = await res.json();
            console.log(data);
      
            if (res.ok) {
                water.textContent = `Water Consumed: ${data.waterintake} litres`
                burn.textContent = `Calories Burned: ${data.caloriesburned} cal`
                consume.textContent = `Calories Consumed: ${data.calorieconsumed} cal`
                sleep.textContent = `Sleep: ${data.sleep} hrs`
            } else {
              console.log("error");
              //emailError.textContent = data.email
            }
          } catch (e) {
            console.log(e.message);
          }
      }
    
    window.onload = function addCurrentDaysInStreak() {
        //const streakElements = document.getElementsByClassName("loginStreak")
        //let current = new Date()
        //for(let i = 0; i < 7; i++){
        //   streakElements[i].textContent = current.getDate() - current.getDay() + i
        //}

        getQuote()
        getHistory()
    }


    window.setInterval(getQuote, 30000)

    
</script>